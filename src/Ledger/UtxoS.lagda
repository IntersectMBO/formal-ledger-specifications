\section{UTxO}
\label{sec:utxo}

\subsection{Accounting}

\begin{code}[hide]
{-# OPTIONS --safe #-}
{-# OPTIONS --overlapping-instances #-}
{-# OPTIONS -v allTactics:100 #-}

open import Ledger.Prelude

open import Algebra using (CommutativeMonoid)

open import Data.Nat using (_≤?_; _≤_)
open import Data.Nat.Properties using (+-0-commutativeMonoid; +-0-monoid; +-comm)

open import Relation.Binary

open import Interface.Decidable.Instance

open import Tactic.Helpers
open import Tactic.MonoidSolver
open import Tactic.EquationalReasoning
open import Tactic.DeriveComp

open import MyDebugOptions
--open import Tactic.Defaults

open import PreludeImports

open import Ledger.Transaction

module Ledger.UtxoS (txs : TransactionStructure) where

instance
  _ = +-0-commutativeMonoid
  _ = Decidable²⇒Dec _≤?_

open TransactionStructure txs
open import Ledger.PParams Epoch
open import Ledger.Crypto

open TxBody
open TxWitnesses
open Tx
\end{code}

Figure~\ref{fig:functions:utxo} defines functions needed for the UTxO transition system.
Figure~\ref{fig:ts-types:utxo-shelley} defines the types needed for the UTxO transition system.
The UTxO transition system is given in Figure~\ref{fig:rules:utxo-shelley}.

\begin{itemize}

  \item
    The function $\fun{outs}$ creates the unspent outputs generated by a transaction.
    It maps the transaction id and output index to the output.

  \item
    The $\fun{balance}$ function calculates sum total of all the coin in a given UTxO.
\end{itemize}

\AgdaTarget{outs, minfee, inInterval, balance}
\begin{figure*}[h]
\begin{code}
Slot : Set
Slot = ℕ

outs : TxBody → UTxO
outs tx = mapKeys (txid tx ,_) (λ where refl → refl) $ txouts tx

coin2 : Value → Coin
coin2 x = {!coin!}

balance : UTxO → Coin
balance utxo = {!!}
  --indexedSumᵐ (λ where (_ , (_ , x)) → x) (toFinMap utxo (finiteness (proj₁ utxo)))
