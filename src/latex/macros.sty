\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{macros}[2025/02/26]
\RequirePackage{pifont}  %% needed for checkmark (\ding{51}).
\RequirePackage{extarrows}
\RequirePackage{slashed}
\RequirePackage{stmaryrd}
\RequirePackage{fontspec}

%%
%% Environments
%%
\newtheorem{property}{Property}[section]
\newenvironment{question}
  {\begin{bclogo}[logo=\bcquestion, couleur=orange!10, arrondi=0.2]{ QUESTION}}
  {\end{bclogo}}
\newenvironment{note}
  {\begin{bclogo}[logo=\bcattention, couleur=orange!10, arrondi=0.2]{ NOTE}}
  {\end{bclogo}}

%%
%% Typesetting defined terms consistently.
%%
\newcommand{\defn}[1]{\textit{#1}}   %  defined terms are typeset in italics
%% \newcommand{\defn}[1]{\textbf{#1}}   %  defined terms are typeset in bold
%%  ^^^^^^ Set the desired typeface for new/defined terms;
%%         at first occurrence of a term, enclose it in `\defn{...}`.

%%
%% Consistent references to GitHub repo and Agda modules.
%%
\newcommand{\repourl}{https://github.com/IntersectMBO/formal-ledger-specifications}
\newcommand{\modulenote}[1]{Code in this section is part of the #1 module
                            of the \href{\repourl}{formal ledger specification}.}
\newcommand{\modulefootnotetext}[1]{\footnotetext{\modulenote{#1}}}

%%
%% Highlighting text with a yellow background.
%%
\newcommand{\hldiff}[1]{\colorbox{yellow}{#1}}

%%
%% Macros for consistent referencing
%%
\ExplSyntaxOn
\NewDocumentCommand\hrefCIP{m}{%
  \clist_if_in:nnTF {0069,1694} {#1}
  {\href{\detokenize{https://cips.cardano.org/cip/CIP-#1}}{CIP-#1}}%
  {\msg_warning:nnn {agda-latex-macros} {invalid-cip} {#1}
    CIP-#1 % Still prints the text but without a hyperlink
  }%
}
\msg_new:nnn {agda-latex-macros} {invalid-cip}
  {CIP-#1 is not a known CIP. The hyperlink will not be created.}
\ExplSyntaxOff

\NewDocumentCommand{\hrefAgdaWiki}{O{Agda Wiki}}{%
  \href{https://wiki.portal.chalmers.se/agda/pmwiki.php}{#1}%
}

\NewDocumentCommand{\hrefAgdaDocs}{O{} O{Agda documentation}}{%
  \href{https://agda.readthedocs.io/en/\AgdaVersion/#1}{#2}%
}
% For a link to the main Agda documentation website, just use \hrefAgdaDocs{}.
% For a link to a specific section of the Agda docs, use
% \hrefAgdaDocs[URLsuffix]{Link text}.
% For example, \hrefAgdaDocs[language/record-types.html][agda.readthedocs.io/record-types],
% produces a link to url https://agda.readthedocs.io/en/\AgdaVersion/language/record-types.html
% with link text "agda.readthedocs.io/record-types".

\NewDocumentCommand{\email}{m}{%
  \href{mailto:#1}{#1}
}

%%
%% Miscellaneous functions and math symbols
%%
\newcommand{\outs}[1]{\fun{outs}~ \var{#1}}
\newcommand{\balance}[1]{\fun{balance}~ \var{#1}}
\newcommand{\txfee}[1]{\fun{txfee}~ \var{#1}}

\DeclareMathOperator{\dom}{dom}
\DeclareMathOperator{\range}{range}
\newcommand{\N}{\ensuremath{\mathbb{N}}}
%% \newunicodechar{ˢ}{\ensuremath{}}

\newcommand{\powerset}[1]{\ensuremath{\mathbb{P}~#1}}
\newcommand{\restrictdom}{\ensuremath{\lhd}}
\newcommand{\subtractdom}{\ensuremath{\mathbin{\slashed{\restrictdom}}}}
\newcommand{\restrictrange}{\ensuremath{\rhd}}
\newcommand{\subtractrange}{\ensuremath{\mathbin{\slashed{\restrictrange}}}}
\newcommand{\union}{\ensuremath{\cup}}
\newcommand{\unionoverrideRight}{\ensuremath{\mathbin{\underrightarrow\cup}}}
\newcommand{\unionoverrideLeft}{\ensuremath{\mathbin{\underleftarrow\cup}}}
\newcommand{\unionoverridePlus}{\ensuremath{\mathbin{\cup_{+}}}}
\newcommand{\unionoverrideZero}{\ensuremath{\mathbin{\cup_{0}}}}
\newcommand{\uniondistinct}{\ensuremath{\uplus}}
\newcommand{\var}[1]{\ensuremath{\mathit{#1}}}
\newcommand{\fun}[1]{\ensuremath{\mathsf{#1}}}
\newcommand{\type}[1]{\ensuremath{\mathsf{#1}}}
\newcommand{\signed}[2]{\ensuremath{\llbracket #1 \rrbracket_{#2}}}
\newcommand{\size}[1]{\ensuremath{\left| #1 \right|}}
\newcommand{\trans}[2]{\ensuremath{\xlongrightarrow[\textsc{#1}]{#2}}}
\newcommand{\seqof}[1]{\ensuremath{#1^{*}}}
\newcommand{\nextdef}{\ensuremath{\\[1em]}}
\newcommand{\where}{\ensuremath{~ ~ \mathbf{where}~ ~ }}

\newcommand{\varUpdate}[1]{\boldsymbol{\color{Violet}#1}}
% Make the ⇀ symbol a bit larger
\usepackage{scalerel}
\usepackage{newunicodechar}
\newcommand{\largerightharpoonup}{\ensuremath{\mathrel{\scaleto{\rightharpoonup}{1.2ex}}}}
\newunicodechar{⇀}{\largerightharpoonup}


%%
%% Agda macros
%%
\newcommand{\AgdaVersion}{v2.7.0}  % <= Change this when updating Agda version!

\newcommand\agdaFont{StrippedJuliaMono}
\newcommand\agdaFontOptions{
Path=fonts/,
Extension=.ttf,
UprightFont=*-Regular,
BoldFont=*-Bold,
ItalicFont=*-RegularItalic,
BoldItalicFont=*-BoldItalic,
%% Scale=MatchLowercase
Scale=0.80
%% Scale=MatchUppercase
}

\NewDocumentCommand\LedgerModule{m}{% usage: \LedgerModule{Utxo}
\href{https://github.com/IntersectMBO/formal-ledger-specifications/blob/master/src/Ledger/#1.lagda}{\AgdaModule{Ledger.#1}}%
}
\NewDocumentCommand\LedgerModText{mm}{% usage: \LedgerModText{Utxo}{UTXO}
\href{https://github.com/IntersectMBO/formal-ledger-specifications/blob/master/src/Ledger/#1.lagda}{\texttt{#2}}%
}

\newfontfamily{\AgdaSerifFont}{\agdaFont}[\agdaFontOptions]
\newfontfamily{\AgdaSansSerifFont}{\agdaFont}[\agdaFontOptions]
\newfontfamily{\AgdaTypewriterFont}{\agdaFont}[\agdaFontOptions]
\renewcommand{\AgdaFontStyle}[1]{{\AgdaSansSerifFont{}#1}}
\renewcommand{\AgdaKeywordFontStyle}[1]{{\AgdaSansSerifFont{}#1}}
\renewcommand{\AgdaStringFontStyle}[1]{{\AgdaTypewriterFont{}#1}}
\renewcommand{\AgdaCommentFontStyle}[1]{{\AgdaTypewriterFont{}#1}}
\renewcommand{\AgdaBoundFontStyle}[1]{{\emph{\AgdaTypewriterFont{}#1}}}

\newcommand{\abstain}{\AgdaInductiveConstructor{abstain}}
\newcommand{\abstainRep}{\AgdaInductiveConstructor{abstainRep}}
\newcommand{\accepted}{\AgdaFunction{accepted}}
\newcommand{\acceptConds}{\AgdaFunction{acceptConds}}
\newcommand{\acceptedBy}{\AgdaFunction{acceptedBy}}
\newcommand{\acceptedStakeRatio}{\AgdaFunction{acceptedStakeRatio}}
\newcommand{\actionWellFormed}{\AgdaFunction{actionWellFormed}}
\newcommand{\actionValid}{\AgdaFunction{actionValid}}
\newcommand{\actualCCVote}{\AgdaFunction{actualCCVote}}
\newcommand{\actualCCVotes}{\AgdaFunction{actualCCVotes}}
\newcommand{\actualSPOVotes}{\AgdaFunction{actualSPOVotes}}
\newcommand{\actualDRepVotes}{\AgdaFunction{actualDRepVotes}}
\newcommand{\actualPDRepVotes}{\AgdaFunction{actualPDRepVotes}}
\newcommand{\actualVotes}{\AgdaFunction{actualVotes}}
\newcommand{\addVote}{\AgdaFunction{addVote}}
\newcommand{\addAction}{\AgdaFunction{addAction}}
\newcommand{\agdatimes}{\AgdaFunction{×}}
\newcommand{\allowedLanguages}{\AgdaFunction{allowedLanguages}}
\newcommand{\Anchor}{\AgdaRecord{Anchor}}
\newcommand{\applyRUpd}{\AgdaFunction{applyRUpd}}

\newcommand{\BaseAddr}{\AgdaRecord{BaseAddr}}

\newcommand{\canVote}{\AgdaFunction{canVote}}
\newcommand{\CC}{\AgdaInductiveConstructor{CC}}
\newcommand{\CCData}{\AgdaFunction{CCData}}
\newcommand{\ccMaxTermLength}{\AgdaField{ccMaxTermLength}}
\newcommand{\ccMinSize}{\AgdaField{ccMinSize}}
\newcommand{\ChangePParams}{\AgdaInductiveConstructor{ChangePParams}}
\newcommand{\Coin}{\AgdaFunction{Coin}}
\newcommand{\coinsPerUTxOByte}{\AgdaField{coinsPerUTxOByte}}
\newcommand{\Computational}{\AgdaRecord{Computational}}
\newcommand{\compute}{\AgdaField{compute}}
\newcommand{\consumed}{\AgdaFunction{consumed}}
\newcommand{\coproduct}{\AgdaDatatype{⊎}}
\newcommand{\corestriction}{\AgdaFunction{∣\textasciicircum{}}}
\newcommand{\CredentialType}{\AgdaDatatype{Credential}}
\newcommand{\credsNeeded}{\AgdaFunction{credsNeeded}}
\newcommand{\credVoter}{\AgdaInductiveConstructor{credVoter}}
\newcommand{\curTreasury}{\AgdaField{curTreasury}}

\newcommand{\Data}{\AgdaFunction{Data}}
\newcommand{\DataHash}{\AgdaFunction{DataHash}}
\newcommand{\delayed}{\AgdaFunction{delayed}}
\newcommand{\delayingAction}{\AgdaFunction{delayingAction}}
\newcommand{\delegate}{\AgdaInductiveConstructor{delegate}}
\newcommand{\DelegEnv}{\AgdaDatatype{DelegEnv}}
\newcommand{\depositsChange}{\AgdaFunction{depositsChange}}
\newcommand{\DepositPurpose}{\AgdaDatatype{DepositPurpose}}
\newcommand{\depositRefunds}{\AgdaFunction{depositRefunds}}
\newcommand{\deposits}{\AgdaField{deposits}}
\newcommand{\Deposits}{\AgdaDatatype{Deposits}}
\newcommand{\DocHash}{\AgdaField{DocHash}}
\newcommand{\DRep}{\AgdaInductiveConstructor{DRep}}
\newcommand{\drepActivity}{\AgdaField{drepActivity}}
\newcommand{\drepDeposit}{\AgdaField{drepDeposit}}
\newcommand{\DReps}{\AgdaInductiveConstructor{DRep}s}
\newcommand{\drepThresholds}{\AgdaField{drepThresholds}}
\newcommand{\DState}{\AgdaDatatype{DState}}

\newcommand{\EconomicGroup}{\AgdaInductiveConstructor{EconomicGroup}}
\newcommand{\EnactEnv}{\AgdaRecord{EnactEnv}}
\newcommand{\EnactState}{\AgdaRecord{EnactState}}
\newcommand{\expired}{\AgdaFunction{expired}}

\newcommand{\fst}{\AgdaField{proj₁}}
\newcommand{\fromList}{\AgdaFunction{fromList}}

\newcommand{\getStakeDist}{\AgdaFunction{getStakeDist}}
\newcommand{\GovAction}{\AgdaDatatype{GovAction}}
\newcommand{\govActionDeposit}{\AgdaField{govActionDeposit}}
\newcommand{\GovActionID}{\AgdaDatatype{GovActionID}}
\newcommand{\govActionLifetime}{\AgdaField{govActionLifetime}}
\newcommand{\govActionPriority}{\AgdaFunction{govActionPriority}}
\newcommand{\GovActionState}{\AgdaRecord{GovActionState}}
\newcommand{\GOVCERTccreghot}{\AgdaInductiveConstructor{GOVCERT-ccreghot}}
\newcommand{\GOVCERTderegdrep}{\AgdaInductiveConstructor{GOVCERT-deregdrep}}
\newcommand{\GOVCERTregdrep}{\AgdaInductiveConstructor{GOVCERT-regdrep}}
\newcommand{\GovEnv}{\AgdaRecord{GovEnv}}
\newcommand{\GovernanceGroup}{\AgdaInductiveConstructor{GovernanceGroup}}
\newcommand{\GovProposal}{\AgdaRecord{GovProposal}}
\newcommand{\GOVPropose}{\AgdaInductiveConstructor{GOV-Propose}}
\newcommand{\GovRole}{\AgdaDatatype{GovRole}}
\newcommand{\GovState}{\AgdaFunction{GovState}}
\newcommand{\GOVVote}{\AgdaInductiveConstructor{GOV-Vote}}
\newcommand{\GovVote}{\AgdaRecord{GovVote}}

\newcommand{\HashProtected}{\AgdaFunction{HashProtected}}

\newcommand{\Info}{\AgdaInductiveConstructor{Info}}
\newcommand{\inl}{\AgdaInductiveConstructor{inj₁}}
\newcommand{\inputHashes}{\AgdaBound{inputHashes}}
\newcommand{\inr}{\AgdaInductiveConstructor{inj₂}}
\newcommand{\isVKey}{\AgdaDatatype{isVKey}}
\newcommand{\isScript}{\AgdaDatatype{isScript}}
\newcommand{\isInl}{\AgdaFunction{isInj₁}}
\newcommand{\isInr}{\AgdaFunction{isInj₂}}
\newcommand{\isRegistered}{\AgdaFunction{isRegistered}}

\newcommand{\List}{\AgdaDatatype{List}}

\newcommand{\mapPartial}{\AgdaFunction{mapPartial}}
\newcommand{\maxBlockSize}{\AgdaField{maxBlockSize}}
\newcommand{\maxBlockExUnits}{\AgdaField{maxBlockExUnits}}
\newcommand{\maxHeaderSize}{\AgdaField{maxHeaderSize}}
\newcommand{\maxTxSize}{\AgdaField{maxTxSize}}
\newcommand{\maxValSize}{\AgdaField{maxValSize}}
\newcommand{\maybe}{\AgdaFunction{maybe}}
\newcommand{\Maybe}{\AgdaDatatype{Maybe}}
\newcommand{\maybeEq}{\AgdaUnderscore{}\AgdaFunction{≡?}\AgdaUnderscore{}}
\newcommand{\maybeprime}{\AgdaFunction{maybe′}}
\newcommand{\minFeeRefScriptCoinsPerByte}{\AgdaField{minFeeRefScriptCoinsPerByte}}
\newcommand{\minfee}{\AgdaFunction{minfee}}
\newcommand{\minimumAVS}{\AgdaField{minimumAVS}}

\newcommand{\negPart}{\AgdaFunction{negPart}}
\newcommand{\NetworkGroup}{\AgdaInductiveConstructor{NetworkGroup}}
\newcommand{\NewConstitution}{\AgdaInductiveConstructor{NewConstitution}}
\newcommand{\newDeposits}{\AgdaFunction{newDeposits}}
\newcommand{\no}{\AgdaInductiveConstructor{no}}
\newcommand{\NoConfidence}{\AgdaInductiveConstructor{NoConfidence}}
\newcommand{\noConfidenceRep}{\AgdaInductiveConstructor{noConfidenceRep}}
\newcommand{\nothing}{\AgdaInductiveConstructor{nothing}}

\newcommand{\paramsWellFormed}{\AgdaFunction{paramsWellFormed}}
\newcommand{\Pfive}{\AgdaField{P5}}
\newcommand{\Pfivea}{\AgdaField{P5a}}
\newcommand{\Pfiveb}{\AgdaField{P5b}}
\newcommand{\Pfivec}{\AgdaField{P5c}}
\newcommand{\Pfived}{\AgdaField{P5d}}
\newcommand{\Pfour}{\AgdaField{P4}}
\newcommand{\Pone}{\AgdaField{P1}}
\newcommand{\poolThresholds}{\AgdaField{poolThresholds}}
\newcommand{\PowerSet}{\AgdaFunction{ℙ}}
\newcommand{\PParams}{\AgdaRecord{PParams}}
\newcommand{\pparamThreshold}{\AgdaFunction{pparamThreshold}}
\newcommand{\prevAction}{\AgdaField{prevAction}}
\newcommand{\ProtVer}{\AgdaFunction{ProtVer}}
\newcommand{\Psix}{\AgdaField{P6}}
\newcommand{\Pthree}{\AgdaField{P3}}
\newcommand{\Ptwoa}{\AgdaField{P2a}}
\newcommand{\Ptwob}{\AgdaField{P2b}}
\newcommand{\produced}{\AgdaFunction{produced}}
\newcommand{\posPart}{\AgdaFunction{posPart}}

\newcommand{\Qone}{\AgdaField{Q1}}
\newcommand{\Qtwoa}{\AgdaField{Q2a}}
\newcommand{\Qtwob}{\AgdaField{Q2b}}
\newcommand{\Qfour}{\AgdaField{Q4}}
\newcommand{\Qfive}{\AgdaField{Q5}}
\newcommand{\Qfivee}{\AgdaField{Q5e}}

\newcommand{\RATIFYAccept}{\AgdaInductiveConstructor{RATIFY-Accept}}
\newcommand{\RATIFYContinue}{\AgdaInductiveConstructor{RATIFY-Continue}}
\newcommand{\RATIFYReject}{\AgdaInductiveConstructor{RATIFY-Reject}}
\newcommand{\refScriptCostStride}{\AgdaField{refScriptCostStride}}
\newcommand{\refScriptCostMultiplier}{\AgdaField{refScriptCostMultiplier}}
\newcommand{\returnAddr}{\AgdaField{returnAddr}}
\newcommand{\roleVotes}{\AgdaFunction{roleVotes}}

\newcommand{\RTC}{\AgdaFunction{ReflexiveTransitiveClosure}}
\newcommand{\RTCI}{\AgdaOperator{\AgdaBound{\AgdaUnderscore{}⊢\AgdaUnderscore{}⇀⟦\AgdaUnderscore{}⟧*\AgdaUnderscore{}}}}
\newcommand{\RTCB}{\AgdaOperator{\AgdaBound{\AgdaUnderscore{}⊢\AgdaUnderscore{}⇀⟦\AgdaUnderscore{}⟧\AgdaUnderscore{}}}}
\newcommand{\RwdAddrToCoinMap}{\AgdaRecord{RwdAddr}~\AgdaFunction{⇀}~\AgdaFunction{Coin}}

\newcommand{\ScriptHash}{\AgdaFunction{ScriptHash}}
\newcommand{\ScriptPurpose}{\AgdaDatatype{ScriptPurpose}}
\newcommand{\scriptsCost}{\AgdaFunction{scriptsCost}}
\newcommand{\scriptsNeeded}{\AgdaFunction{scriptsNeeded}}
\newcommand{\SecurityGroup}{\AgdaInductiveConstructor{SecurityGroup}}
\newcommand{\snd}{\AgdaField{proj₂}}
\newcommand{\SPO}{\AgdaInductiveConstructor{SPO}}
\newcommand{\SPOs}{\AgdaInductiveConstructor{SPOs}}
\newcommand{\stake}{\AgdaField{stake}}
\newcommand{\subseteqfield}{\AgdaInductiveConstructor{⊆}}

\newcommand{\TechnicalGroup}{\AgdaInductiveConstructor{TechnicalGroup}}
\newcommand{\threshold}{\AgdaFunction{threshold}}
\newcommand{\Timelock}{\AgdaDatatype{Timelock}}
\newcommand{\TreasuryWdrl}{\AgdaInductiveConstructor{TreasuryWdrl}}
\newcommand{\TriggerHF}{\AgdaInductiveConstructor{TriggerHF}}
\newcommand{\Tx}{\AgdaRecord{Tx}}
\newcommand{\txdatsHashes}{\AgdaBound{txdatsHashes}}
\newcommand{\txdonation}{\AgdaField{txdonation}}
\newcommand{\TxId}{\AgdaDatatype{TxId}}
\newcommand{\txid}{\AgdaField{txid}}
\newcommand{\txins}{\AgdaField{txins}}
\newcommand{\TxOut}{\AgdaFunction{TxOut}}
\newcommand{\txouts}{\AgdaField{txouts}}
\newcommand{\txprop}{\AgdaField{txprop}}
\newcommand{\txsize}{\AgdaField{txsize}}
\newcommand{\txvote}{\AgdaField{txvote}}
\newcommand{\Type}{\AgdaPrimitive{Type}}

\newcommand{\updateCertDeposits}{\AgdaFunction{updateCertDeposits}}
\newcommand{\UpdateCommittee}{\AgdaInductiveConstructor{UpdateCommittee}}
\newcommand{\updateDeposits}{\AgdaFunction{updateDeposits}}
\newcommand{\updateProposalDeposits}{\AgdaFunction{updateProposalDeposits}}
\newcommand{\UTxO}{\AgdaFunction{UTxO}}
\newcommand{\UTxOEnv}{\AgdaRecord{UTxOEnv}}
\newcommand{\UTxOState}{\AgdaRecord{UTxOState}}

\newcommand{\ValidCertDeposits}{\AgdaDatatype{ValidCertDeposits}}
\newcommand{\validHFAction}{\AgdaFunction{validHFAction}}
\newcommand{\VDeleg}{\AgdaDatatype{VDeleg}}
\newcommand{\verifyPrev}{\AgdaFunction{verifyPrev}}
\newcommand{\Vote}{\AgdaDatatype{Vote}}

\newcommand{\withdrawals}{\AgdaField{withdrawals}}
\newcommand{\witsVKeyNeeded}{\AgdaFunction{witsVKeyNeeded}}

\newcommand{\yes}{\AgdaInductiveConstructor{yes}}

\endinput
