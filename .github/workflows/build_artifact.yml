on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download agda _build artifact
        uses: actions/download-artifact@v4
        with:
          name: _build
          path: _build
      - name: Checkout legacy LaTeX files for PDF builds
        if: contains(inputs.target, '.pdf')
        uses: actions/checkout@v4
        with:
          ref: legacy-latex
          path: legacy-temp
          sparse-checkout: |
            src
          sparse-checkout-cone-mode: false
      - name: Copy legacy LaTeX files
        if: contains(inputs.target, '.pdf')
        run: |
          echo "Copying legacy .lagda files for PDF build..."
          if [ -d "legacy-temp/src" ]; then
            # Copy .lagda files, preserving directory structure
            find legacy-temp/src -name "*.lagda" -type f | while read -r file; do
              # Remove the legacy-temp/ prefix to get the target path
              target_path="${file#legacy-temp/}"
              target_dir=$(dirname "$target_path")
              mkdir -p "$target_dir"
              cp "$file" "$target_path"
              echo "Copied: $file -> $target_path"
            done

            # List what we copied for debugging
            echo "Legacy files copied:"
            find src -name "*.lagda" -type f
          else
            echo "No legacy src directory found"
          fi

          # Clean up
          rm -rf legacy-temp
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/6c5963357f3c1c840201eda129a99d455074db04.tar.gz
          extra_nix_config: |
            trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            substituters = https://cache.iog.io https://cache.nixos.org/
      - name: Build artifact
        run: |
          nix-shell -A devShells.ci --run 'fls-shake --trace -j8 ${{ inputs.target }}'
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.target }}
          path: dist
