/*
 * Custom CSS for Formal Ledger Specifications
 *
 * This file contains auto-generated Agda class styles (from Agda.css)
 * and project-specific customizations.
 */

/* ======================================================================= */
/* AUTO-GENERATED AGDA CLASSES (from Agda.css)                            */
/* ======================================================================= */
[data-md-color-scheme="default"] {
  pre.Agda .Argument { color: #404040 }
  .AgdaArgument { color: #404040 }
  pre.Agda .Comment { color: #B22222 }
  .AgdaComment { color: #B22222 }
  pre.Agda .Background {  }
  .AgdaBackground {  }
  pre.Agda .Markup { color: #000000 }
  .AgdaMarkup { color: #000000 }
  pre.Agda .Keyword { color: #CD6600 }
  .AgdaKeyword { color: #CD6600 }
  pre.Agda .String { color: #B22222 }
  .AgdaString { color: #B22222 }
  pre.Agda .Number { color: #A020F0 }
  .AgdaNumber { color: #A020F0 }
  pre.Agda .Symbol { color: #404040 }
  .AgdaSymbol { color: #404040 }
  pre.Agda .PrimitiveType { color: #0000CD }
  .AgdaPrimitiveType { color: #0000CD }
  pre.Agda .Pragma { color: black }
  .AgdaPragma { color: black }
  pre.Agda .Operator {  }
  .AgdaOperator {  }
  pre.Agda .Hole { background: #B4EEB4 }
  .AgdaHole { background: #B4EEB4 }
  pre.Agda .Bound { color: black }
  .AgdaBound { color: black }
  pre.Agda .Generalizable { color: black }
  .AgdaGeneralizable { color: black }
  pre.Agda .InductiveConstructor { color: #008B00 }
  .AgdaInductiveConstructor { color: #008B00 }
  pre.Agda .CoinductiveConstructor { color: #8B7500 }
  .AgdaCoinductiveConstructor { color: #8B7500 }
  pre.Agda .Datatype { color: #0000CD }
  .AgdaDatatype { color: #0000CD }
  pre.Agda .Field { color: #EE1289 }
  .AgdaField { color: #EE1289 }
  pre.Agda .Function { color: #0000CD }
  .AgdaFunction { color: #0000CD }
  pre.Agda .Macro { color: #0000CD }
  .AgdaMacro { color: #0000CD }
  pre.Agda .Module { color: #A020F0 }
  .AgdaModule { color: #A020F0 }
  pre.Agda .Postulate { color: #0000CD }
  .AgdaPostulate { color: #0000CD }
  pre.Agda .Primitive { color: #0000CD }
  .AgdaPrimitive { color: #0000CD }
  pre.Agda .Record { color: #0000CD }
  .AgdaRecord { color: #0000CD }
  pre.Agda .DottedPattern {  }
  .AgdaDottedPattern {  }
  pre.Agda .UnsolvedMeta { color: black; background: yellow }
  .AgdaUnsolvedMeta { color: black; background: yellow }
  pre.Agda .UnsolvedConstraint { color: black; background: yellow }
  .AgdaUnsolvedConstraint { color: black; background: yellow }
  pre.Agda .TerminationProblem { color: black; background: #FFA07A }
  .AgdaTerminationProblem { color: black; background: #FFA07A }
  pre.Agda .IncompletePattern { color: black; background: #F5DEB3 }
  .AgdaIncompletePattern { color: black; background: #F5DEB3 }
  pre.Agda .Error { color: red; text-decoration: underline }
  .AgdaError { color: red; text-decoration: underline }
  pre.Agda .TypeChecks { color: black; background: #ADD8E6 }
  .AgdaTypeChecks { color: black; background: #ADD8E6 }
  pre.Agda .Deadcode { color: black; background: #808080 }
  .AgdaDeadcode { color: black; background: #808080 }
  pre.Agda .ShadowingInTelescope { color: black; background: #808080 }
  .AgdaShadowingInTelescope { color: black; background: #808080 }
}

/* ======================================================================= */
/* DARK MODE OVERRIDES (from Agda-dark.css)                              */
/* ======================================================================= */
[data-md-color-scheme="slate"] {
  pre.Agda .Argument { color: #ffffff }
  .AgdaArgument { color: #ffffff }
  pre.Agda .Comment { color: #cc9393 }
  .AgdaComment { color: #cc9393 }
  pre.Agda .Background {  }
  .AgdaBackground {  }
  pre.Agda .Markup { color: #dcdccc }
  .AgdaMarkup { color: #dcdccc }
  pre.Agda .Keyword { color: #dcdccc }
  .AgdaKeyword { color: #dcdccc }
  pre.Agda .String { color: #dcdccc }
  .AgdaString { color: #dcdccc }
  pre.Agda .Number { color: #dcdccc }
  .AgdaNumber { color: #dcdccc }
  pre.Agda .Symbol { color: #dcdccc }
  .AgdaSymbol { color: #dcdccc }
  pre.Agda .PrimitiveType { color: #ADD8E6 }
  .AgdaPrimitiveType { color: #ADD8E6 }
  pre.Agda .Pragma { color: #dcdccc }
  .AgdaPragma { color: #dcdccc }
  pre.Agda .Operator {  }
  .AgdaOperator {  }
  pre.Agda .Hole { background: #9fafaf }
  .AgdaHole { background: #9fafaf }
  pre.Agda .Bound { color: #dcdccc }
  .AgdaBound { color: #dcdccc }
  pre.Agda .Generalizable { color: #dcdccc }
  .AgdaGeneralizable { color: #dcdccc }
  pre.Agda .InductiveConstructor { color: #ffcfaf }
  .AgdaInductiveConstructor { color: #ffcfaf }
  pre.Agda .CoinductiveConstructor { color: #ffcfaf }
  .AgdaCoinductiveConstructor { color: #ffcfaf }
  pre.Agda .Datatype { color: #ADD8E6 }
  .AgdaDatatype { color: #ADD8E6 }
  pre.Agda .Field { color: #ffcfaf }
  .AgdaField { color: #ffcfaf }
  pre.Agda .Function { color: #9fafaf }
  .AgdaFunction { color: #9fafaf }
  pre.Agda .Macro { color: #9fafaf }
  .AgdaMacro { color: #9fafaf }
  pre.Agda .Module { color: #9fafaf }
  .AgdaModule { color: #9fafaf }
  pre.Agda .Postulate { color: #9fafaf }
  .AgdaPostulate { color: #9fafaf }
  pre.Agda .Primitive { color: #ADD8E6 }
  .AgdaPrimitive { color: #ADD8E6 }
  pre.Agda .Record { color: #ADD8E6 }
  .AgdaRecord { color: #ADD8E6 }
  pre.Agda .DottedPattern { color: #cc9393 }
  .AgdaDottedPattern { color: #cc9393 }
  pre.Agda .UnsolvedMeta { color: black; background: yellow }
  .AgdaUnsolvedMeta { color: black; background: yellow }
  pre.Agda .UnsolvedConstraint { color: black; background: yellow }
  .AgdaUnsolvedConstraint { color: black; background: yellow }
  pre.Agda .TerminationProblem { color: black; background: #FFA07A }
  .AgdaTerminationProblem { color: black; background: #FFA07A }
  pre.Agda .IncompletePattern { color: black; background: #F5DEB3 }
  .AgdaIncompletePattern { color: black; background: #F5DEB3 }
  pre.Agda .Error { color: red; text-decoration: underline }
  .AgdaError { color: red; text-decoration: underline }
  pre.Agda .TypeChecks { color: black; background: #ADD8E6 }
  .AgdaTypeChecks { color: black; background: #ADD8E6 }
  pre.Agda .Deadcode { color: black; background: #808080 }
  .AgdaDeadcode { color: black; background: #808080 }
  pre.Agda .ShadowingInTelescope { color: black; background: #808080 }
  .AgdaShadowingInTelescope { color: black; background: #808080 }
}
/* docs/css/custom.css */

/* ======================================================================= */
/* PROJECT-SPECIFIC STYLES                                                 */
/* ======================================================================= */

/* Base style for inline Agda terms (optional, theme might cover) */
code {
  /* font-family: 'Your Mono Font', monospace; */ /* Example if needed */
  /* Add other common styles if necessary */
}

code.test-class { color: red; font-weight: bold; border: 1px solid red; }

/* Style for hldiff placeholder */
span.highlight {
  background-color: yellow;
  padding: 0.1em 0.2em; /* Add slight padding */
  border-radius: 3px; /* Optional rounded corners */
}

/*
 * Adjust the font size of Agda code blocks to be slightly smaller
 * than the surrounding prose for better visual balance.
 */
pre.Agda {
  font-size: 85%;
}

pre.Agda.hidden-source {
  display: none; /* Hidden by default */
}

body.reveal-agda-source pre.Agda.hidden-source {
  display: block; /* Shown when body has the class */
}

/* Style for inline code snippets */
:not(pre) > code {
  background-color: rgba(245, 158, 11, 0.1); /* Light amber background */
  color: #B45309; /* Darker amber text */
  padding: 0.2em 0.4em;
  border-radius: 4px;
 }


/* ======================================================================= */
/* Style for the dynamically-injected 'Show more Agda' button in the header. */

/*
 * A more refined style for the 'Show Agda' toggle button in the header.
 */
#toggle-agda-source {
  display: inline-flex; /* Use flexbox for robust vertical alignment of icon and text. */
  align-items: center; /* Vertically centers the icon and text with each other. */

  /* --- CONTROLS ICON POSITION --- */
  /* This is the modern and reliable way to control space between flex items. */
  /* Increase this value to add more space between the text and the icon. */
  /* Try 0.5em for more space. */
  gap: 0.4em;

  /* --- CONTROLS BUTTON SIZE --- */
  /* This is the primary control for the button's overall size. */
  /* It sets the size of the text, and other elements scale relative to it. */
  /* Try changing this to 0.7rem or 0.8rem to make the button smaller. */
  font-size: 0.6rem;

  /* --- CONTROLS BUTTON SIZE --- */
  /* This controls the space around the text and icon, affecting button size. */
  /* The first value is top/bottom padding, the second is left/right. */
  /* Try changing this to "0.2rem 0.6rem" for a smaller button. */
  padding: 0.2rem 0.6rem;

  /* Sizing and Positioning */
  margin-left: 0.8rem; /* Space between this button and the element to its left. */
  border: 1px solid transparent; /* Transparent border prevents a size jump on hover. */
  border-radius: 9999px; /* Creates the "pill" shape. */

  /* Typography */
  font-family: "Roboto", -apple-system, BlinkMacSystemFont, Helvetica, Arial, sans-serif; /* Explicitly sets a clean, sans-serif font. */
  font-weight: 500; /* A medium font weight. */
  line-height: 1.25; /* Adjusts the space between lines of text if it wraps. */
  color: var(--md-default-fg-color--light); /* Sets the text color using a theme variable. */
  background-color: var(--md-default-bg-color--light); /* Sets the background color using a theme variable. */

  /* Interactivity & Effects */
  cursor: pointer; /* Shows a hand cursor on hover. */
  transition: all 0.2s ease-in-out; /* Makes all property changes (like color, shadow) smooth. */
  box-shadow: 0 6px 10px rgba(0,0,0,0.5); /* A subtle shadow to lift the button off the page. */
}

/* Hover state: subtle color change and lift */
#toggle-agda-source:hover {
  /* color: var(--md-primary-fg-color); /\* Changes text color on hover. *\/ */
  background-color: var(--md-primary-fg-color--lightest); /* Changes background on hover. */
  border-color: var(--md-primary-fg-color--light); /* Makes the border visible on hover. */
  transform: translateY(-1px); /* Lifts the button slightly. */
  box-shadow: 0 1px 2px rgba(0,0,0,0.05); /* Increases the shadow on hover. */
}

/* Active/click state */
#toggle-agda-source:active {
  transform: translateY(0); /* Resets the lift effect when clicked. */
  box-shadow: 0 1px 2px rgba(0,0,0,0.05); /* Resets the shadow when clicked. */
}

/*
 * Style for the SVG icon inside the Agda toggle button.
 */
.agda-logo-icon {
  /* Sizing */
  width: 1.1em; /* Icon width is relative to the button's font-size. */
  height: 1.1em; /* Icon height is relative to the button's font-size. */
  color: #888888;

  /* The 'gap' property on the parent button now controls spacing, so no margin is needed here. */
}

/* ======================================================================= */
/* Styles for Custom Theorem Environments                                  */
/* ======================================================================= */
.theorem {
  display: block;
  margin: 1.5em 0;
  padding: 1.2em;
  padding-left: 1.5em;
  border-left: 5px solid var(--md-primary-fg-color);
  background-color: var(--md-default-bg-color--light);
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.05);
}

.theorem ul {
  list-style-type: none;
  padding-left: 0;
  margin-top: 0.5em;
}

.theorem ul > li {
  margin-bottom: 0.8em;
}


/* ======================================================================= */
/* Tiny color swatch for figure legends                                    */
/* ======================================================================= */
/* legend boxes */
.legend-box {
  display: inline-block;
  width: 1em;
  height: 1em;
  margin-right: 0.25em;
  vertical-align: middle;
  border: 1px solid #333; /* optional border */
}

/* Map your LaTeX xcolor names */
.legend-Alonzo { background-color: #CCCCFF; }   /* Periwinkle */
.legend-Babbage { background-color: #db9470; }  /* Tan */
.legend-Conway { background-color: #ffff80; }   /* yellow!50 ≈ 50% mix with white */
.legend-Shelley { background-color: #D3D3D3; }  /* lightgray */

/* Using these color classes in Markdown

   MkDocs/Markdown allows inline HTML, so in your `.md` file you can write:
   ```markdown
    **Legend:**
    <span class="legend-box legend-Alonzo"></span> Alonzo
    <span class="legend-box legend-Babbage"></span> Babbage
    <span class="legend-box legend-Conway"></span> Conway
    <span class="legend-box legend-Shelley"></span> Shelley
   ```
*/

/* A soft panel behind transparent SVGs */
.svg-card {
  display: inline-block;
  padding: .75rem;
  border-radius: .5rem;
  border: 1px solid rgba(0,0,0,.08);
  background: #edf3ff;            /* light mode */
}

/* MkDocs Material dark theme */
[data-md-color-scheme="slate"] .svg-card {
  background: #9fafaf;    /* dark slate panel */
  border-color: rgba(255,255,255,.08);
}

.svg-card img { display:block; max-width:100%; height:auto; }
